)
return(result_pl)
}
# csv_polars()
#| label: csv-results-benchmarking
bench::mark(
csv_rbase(),
csv_dplyr(),
csv_dt(),
csv_polars()
)
#| label: csv-rbase-benchmarking
csv_rbase <- function() {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result$colDate1 <- as.Date(result$colDate1)
result$colDate2 <- as.Date(result$colDate2)
# Creation of a diff column between 2 dates (in days)
result$diff <- round(
difftime(
result$colDate2,
result$colDate1,
units = "days"),
0)
return(result)
}
csv_rbase()
#| label: csv-rbase-benchmarking
csv_rbase <- function() {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result$colDate1 <- as.Date(result$colDate1)
result$colDate2 <- as.Date(result$colDate2)
# Creation of a diff column between 2 dates (in days)
result$diff <- round(
difftime(
result$colDate2,
result$colDate1,
units = "days"),
0)
return(result)
}
res_rbase <- csv_rbase()
#| label: csv-dplyr-benchmarking
csv_dplyr <- function() {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result <- result |>
mutate(
colDate1 = as.Date(colDate1),
colDate2 = as.Date(colDate2)
)
# Creation of a diff column between 2 dates (in days)
result <- result |>
mutate(diff = round(difftime(colDate2, colDate1, units = "days")),0)
return(result)
}
res_dplyr <- csv_dplyr()
csv_dplyr <- function() {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result <- result |>
mutate(
colDate1 = as.Date(colDate1),
colDate2 = as.Date(colDate2)
)
# Creation of a diff column between 2 dates (in days)
result <- result |>
mutate(diff = round(difftime(colDate2, colDate1, units = "days"),0))
return(result)
}
#| label: csv-results-benchmarking
bench::mark(
csv_rbase(),
csv_dplyr()#,
# csv_dt(),
# csv_polars()
)
bench::mark(
csv_rbase(),
# csv_dplyr(),
csv_dt()#,
# csv_polars()
)
res_dt <- csv_dt()
View(res_dplyr)
#| label: csv-datatable-benchmarking
csv_dt <- function(variables) {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion data.frame to data.table
result_dt <- as.data.table(result)
# Conversion of 2 columns to Date format
result_dt <- result_dt[, `:=`(colDate1 = as.Date(colDate1),colDate2 = as.Date(colDate2))]
# Creation of a diff column between 2 dates (in days)
result_dt <- result_dt[, diff := difftime(colDate2, colDate1, units = "days")]
return(result)
}
res_dt <- csv_dt()
View(res_dt)
# Conversion data.frame to data.table
result_dt <- as.data.table(result)
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion data.frame to data.table
result_dt <- as.data.table(result)
# Conversion of 2 columns to Date format
result_dt <- result_dt[, `:=`(colDate1 = as.Date(colDate1),colDate2 = as.Date(colDate2))]
# Creation of a diff column between 2 dates (in days)
result_dt <- result_dt[, diff := difftime(colDate2, colDate1, units = "days")]
# Creation of a diff column between 2 dates (in days)
result_dt <- result_dt[, diff := difftime(colDate2, colDate1, units = "days")]
rm(result)
names(result_dt)
dim(result_dt)
#| label: csv-results-benchmarking
#| message: false
#| warning: false
bench::mark(
csv_rbase(),
# csv_dplyr(),
csv_dt()#,
# csv_polars()
)
rm(result_dt)
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion data.frame to data.table
result_dt <- as.data.table(result)
# Conversion of 2 columns to Date format
result_dt <- result_dt[, `:=`(colDate1 = as.Date(colDate1),colDate2 = as.Date(colDate2))]
# Creation of a diff column between 2 dates (in days)
result_dt <- result_dt[, diff := difftime(colDate2, colDate1, units = "days")]
# Creation of a diff column between 2 dates (in days)
result_dt <- result_dt[, diff := difftime(colDate2, colDate1, units = "days")]
result_dt <- result_dt[, toto := "sfkfns"]
names(result_dt)
dim(result_dt)
bench::mark(
"toto" = iris,
"titi" = as.data.table(iris))
bench::mark(
"toto" = iris,
"titi" = as.data.frame(as.data.table(iris)))
bench::mark(
"toto" = iris,
"titi" = as.data.frame(as.data.table(iris)),
"tutu" = pl$("iris"))
bench::mark(
"toto" = iris,
"titi" = as.data.frame(as.data.table(iris)),
"tutu" = pl$("iris"))
bench::mark(
"toto" = iris,
"titi" = as.data.frame(as.data.table(iris)),
"tutu" = pl$("iris"))
bench::mark(
"toto" = iris,
"titi" = as.data.frame(as.data.table(iris)),
"tutu" = pl$DataFrame("iris"))
bench::mark(
"toto" = iris,
"titi" = as.data.frame(as.data.table(iris)),
"tutu" = pl$DataFrame("iris")$frame)
bench::mark(
"toto" = iris,
"titi" = as.data.frame(as.data.table(iris)),
"tutu" = pl$DataFrame("iris")$to_data_frame)
pl$DataFrame("iris")$to_data_frame
bench::mark(
"toto" = iris,
"titi" = as.data.frame(as.data.table(iris)),
"tutu" = pl$DataFrame("iris")$to_data_frame())
pl$DataFrame("iris")$to_data_frame()
pl$DataFrame(iris)$to_data_frame()
bench::mark(
"toto" = iris,
"titi" = as.data.frame(as.data.table(iris)),
"tutu" = pl$DataFrame(iris)$to_data_frame())
#| results: 'hide'
library(polars)
library(arrow)
library(dplyr)
library(data.table)
library(bench)
dat <- data.frame(x = runif(100, 1, 1000), y=runif(10, 1, 1000))
bench::mark(
"toto" = iris,
"titi" = as.data.frame(as.data.table(iris)),
"tutu" = pl$DataFrame(iris)$to_data_frame())
csv_rbase <- function() {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result$colDate1 <- as.Date(result$colDate1)
result$colDate2 <- as.Date(result$colDate2)
# Creation of a diff column between 2 dates (in days)
result$diff <- round(
difftime(
result$colDate2,
result$colDate1,
units = "days"),
0)
return(result)
}
csv_dplyr <- function() {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result <- result |>
mutate(
colDate1 = as.Date(colDate1),
colDate2 = as.Date(colDate2)
)
# Creation of a diff column between 2 dates (in days)
result <- result |>
mutate(diff = round(difftime(colDate2, colDate1, units = "days"),0))
return(result)
}
csv_dt <- function(variables) {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion data.frame to data.table
result_dt <- as.data.table(result)
# Conversion of 2 columns to Date format
result_dt <- result_dt[, `:=`(colDate1 = as.Date(colDate1),colDate2 = as.Date(colDate2))]
# Creation of a diff column between 2 dates (in days)
result_dt <- result_dt[, diff := difftime(colDate2, colDate1, units = "days")]
return(result)
}
res_dt <- csv_dt()
str(res_dt)
rm(dat)
rm(res_dt)
csv_polars <- function(variables) {
# Reading the csv file (eager mode)
result_pl <- pl$read_csv(path = "Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result_pl <- result_pl$with_columns(
pl$col("colDate1")$str$strptime(pl$Date, "%F %T", strict = FALSE),
pl$col("colDate2")$str$strptime(pl$Date, "%F %T", strict = FALSE)
)
# Creation of a diff column between 2 dates (in days)
result_pl <- result_pl$with_columns(
(pl$col("colDate2") - pl$col("colDate1"))$alias("diff")
)
return(result_pl)
}
bench::mark(
"csv_rbase" = csv_rbase(),
#"csv_dplyr" = csv_dplyr(),
"csv_dt" = as.data.frame(csv_dt())#,
#"csv_polars" = csv_polars()$to_data_frame()
)
csv_dt <- function(variables) {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion data.frame to data.table
result_dt <- as.data.table(result)
# Conversion of 2 columns to Date format
result_dt <- result_dt[, `:=`(colDate1 = as.Date(colDate1),colDate2 = as.Date(colDate2))]
# Creation of a diff column between 2 dates (in days)
result_dt <- result_dt[, diff := difftime(colDate2, colDate1, units = "days")]
return(result_dt)
}
bench::mark(
"csv_rbase" = csv_rbase(),
#"csv_dplyr" = csv_dplyr(),
"csv_dt" = as.data.frame(csv_dt())#,
#"csv_polars" = csv_polars()$to_data_frame()
)
bench::mark(
"toto" = iris,
"titi" = as.data.frame(as.data.table(iris)),
"tutu" = pl$DataFrame(iris)$to_data_frame())
csv_polars <- function(variables) {
# Reading the csv file (eager mode)
result_pl <- pl$read_csv(path = "Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result_pl <- result_pl$with_columns(
pl$col("colDate1")$str$strptime(pl$Date, "%F %T", strict = FALSE),
pl$col("colDate2")$str$strptime(pl$Date, "%F %T", strict = FALSE)
)
# Creation of a diff column between 2 dates (in days)
result_pl <- result_pl$with_columns(
(pl$col("colDate2") - pl$col("colDate1"))$alias("diff")
)
return(result_pl)
}
res_polars <- csv_polars()
library(polars)
library(arrow)
library(dplyr)
library(data.table)
library(DBI)
library(duckdb)
library(tictoc)
library(bench)
res_polars <- csv_polars()
res_polars
csv_rbase <- function() {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result$colDate1 <- as.Date(result$colDate1)
result$colDate2 <- as.Date(result$colDate2)
# Creation of a diff column between 2 dates (in days)
result$diff <- round(
difftime(
result$colDate2,
result$colDate1,
units = "days"),
0)
return(result)
}
res_rbase <- csv_rbase()
class(res_base$diff)
class(res_rbase$diff)
csv_rbase <- function() {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result$colDate1 <- as.Date(result$colDate1)
result$colDate2 <- as.Date(result$colDate2)
# Creation of a diff column between 2 dates (in days)
result$diff <- round(
as.numeric(
difftime(
result$colDate2,
result$colDate1,
units = "days")
),
0)
return(result)
}
res_rbase <- csv_rbase()
str(res_rbase)
csv_polars <- function(variables) {
# Reading the csv file (eager mode)
result_pl <- pl$read_csv(path = "Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result_pl <- result_pl$with_columns(
pl$col("colDate1")$str$strptime(pl$Date, "%F %T", strict = FALSE),
pl$col("colDate2")$str$strptime(pl$Date, "%F %T", strict = FALSE)
)
# Creation of a diff column between 2 dates (in days)
result_pl <- result_pl$with_columns(
(pl$col("colDate2") - pl$col("colDate1"))$cast(pl$Int16)$alias("diff")
)
return(result_pl)
}
res_polars <- csv_polars()
res_polars$with_columns(
pl$col("diff")$cast(pl$Int16)
)
res_polars$with_columns(
pl$col("diff")$str$strptime(pl$Int16)
)
res_polars$with_columns(
pl$col("diff")$dt$days
)
res_polars$with_columns(
pl$col("diff")$dt$days()
)
csv_polars <- function(variables) {
# Reading the csv file (eager mode)
result_pl <- pl$read_csv(path = "Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result_pl <- result_pl$with_columns(
pl$col("colDate1")$str$strptime(pl$Date, "%F %T", strict = FALSE),
pl$col("colDate2")$str$strptime(pl$Date, "%F %T", strict = FALSE)
)
# Creation of a diff column between 2 dates (in days)
result_pl <- result_pl$with_columns(
(pl$col("colDate2") - pl$col("colDate1"))$dt$days()$alias("diff")
)
return(result_pl)
}
res_polars <- csv_polars()
res_polars
csv_rbase <- function() {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result$colDate1 <- as.Date(result$colDate1)
result$colDate2 <- as.Date(result$colDate2)
# Creation of a diff column between 2 dates (in days)
result$diff <- round(
as.numeric(
difftime(
result$colDate2,
result$colDate1,
units = "days")
),
0)
return(result)
}
res_rbase <- csv_rbase()
csv_polars <- function(variables) {
# Reading the csv file (eager mode)
result_pl <- pl$read_csv(path = "Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result_pl <- result_pl$with_columns(
pl$col("colDate1")$str$strptime(pl$Date, "%F %T", strict = FALSE),
pl$col("colDate2")$str$strptime(pl$Date, "%F %T", strict = FALSE)
)
# Creation of a diff column between 2 dates (in days)
result_pl <- result_pl$with_columns(
(pl$col("colDate2") - pl$col("colDate1"))$dt$days()$alias("diff")
)
return(result_pl)
}
res_polars <- csv_polars()
#| label: load-packages-benchmarking
#| code-fold: true
#| message: false
#| warning: false
#| results: 'hide'
library(polars)
library(arrow)
library(arrow)
library(dplyr)
library(data.table)
res_polars <- csv_polars()
final <- res_polars$to_data_frame()
str(res_rbase)
str(final)
#| label: csv-rbase-benchmarking
csv_rbase <- function() {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result$colDate1 <- as.Date(result$colDate1)
result$colDate2 <- as.Date(result$colDate2)
# Creation of a diff column between 2 dates (in days)
result$diff <- round(
as.integer(
difftime(
result$colDate2,
result$colDate1,
units = "days")
),
0)
return(result)
}
tic()
library(polars)
library(arrow)
library(dplyr)
library(data.table)
library(DBI)
library(duckdb)
library(tictoc)
library(bench)
#| label: csv-rbase-benchmarking
csv_rbase <- function() {
# Reading the csv file
result <- read.csv("Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result$colDate1 <- as.Date(result$colDate1)
result$colDate2 <- as.Date(result$colDate2)
# Creation of a diff column between 2 dates (in days)
result$diff <- round(
as.integer(
difftime(
result$colDate2,
result$colDate1,
units = "days")
),
0)
return(result)
}
tic()
res_rbase <- csv_rbase()
toc()
#| label: csv-polars-benchmarking
csv_polars <- function(variables) {
# Reading the csv file (eager mode)
result_pl <- pl$read_csv(path = "Datasets/DataMultiTypes.csv")
# Conversion of 2 columns to Date format
result_pl <- result_pl$with_columns(
pl$col("colDate1")$str$strptime(pl$Date, "%F %T", strict = FALSE),
pl$col("colDate2")$str$strptime(pl$Date, "%F %T", strict = FALSE)
)
# Creation of a diff column between 2 dates (in days)
result_pl <- result_pl$with_columns(
(pl$col("colDate2") - pl$col("colDate1"))$dt$days()$alias("diff")
)
return(result_pl)
}
tic()
res_polars <- csv_polars()$to_data_frame()
toc()
bench::mark(
"R base" = res_rbase,
"polars" = res_polars
)
str(res_rbase)
str(res_polars)
res_rbase$diff <- as.integer(res_rbase$diff)
str(res_rbase)
bench::mark(
"R base" = res_rbase,
"polars" = res_polars
)
library(microbenchmark)
microbenchmark(
"R base" = res_rbase,
"polars" = res_polars
)
