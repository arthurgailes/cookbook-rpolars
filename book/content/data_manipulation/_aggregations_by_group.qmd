## Aggregation by group

Another frequently used data manipulation is the aggregation of data by group. To do this, we indicate in the `group_by()` method which column will be used to group the data.frame. And the `agg()` method which specifies the expression to aggregate.

The methods available for the `agg()` method are (in each group):  

 - `first()` get the first element  
 - `last()` get the last element  
 - `n_unique()` get the number of unique elements  
 - `count()` get the number of elements   
 - `sum()` sum the elements  
 - `min()` get the smallest element  
 - `max()` get the largest element  
 - `mean()` get the average of elements  
 - `median()` get the median  
 - `quantile()` calculate quantiles  
 
 Here's a minimal example with `sum` applied to 2 different columns:  
 
::: {.panel-tabset}
## polars

```{r}
#| label: agg-polars
pl$DataFrame(iris)$
  groupby("Species")$
  agg(pl$col(c("Petal.Length","Petal.Width"))$sum())
```

::: {.callout-tip}
Be careful! **Calling multiple aggregations on the same column produces columns of the same name** which generates an error with R.  

You can use the `alias()` or `suffix()` method to ensure column names are unique.  
For example:  

```{r}
#| label: example-agg-with-alias

pl$DataFrame(iris)$
  groupby("Species")$
  agg(
    # With alias()
    pl$col(c("Petal.Length"))$sum()$alias("Petal.Length_Sum"),
    pl$col(c("Petal.Length"))$mean()$alias("Petal.Length_Mean"),
    # With suffix()
    pl$col(c("Petal.Width"))$sum()$suffix("_Sum"),
    pl$col(c("Petal.Width"))$mean()$suffix("_Mean")
  )
```

:::

## R base

```{r}
#| label: aggregate-cbind-rbase
aggregate(cbind(Petal.Length, Petal.Width) ~ Species, data = iris, FUN = sum)
```

## dplyr

```{r}
#| label: summarise-dplyr
data(iris)
iris |>
  group_by(Species) |>
  summarise(across(c(Petal.Length, Petal.Width), sum)) 
```

## data.table

```{r}
#| label: summarise-datatable
iris_dt <- as.data.table(iris)
iris_dt[, .(Petal.Length = sum(Petal.Length), Petal.Width = sum(Petal.Width)), by = Species]
```
:::