# First steps with Polars and R

First of all we need to install all the packages and create an big random dataset needed for this book to work, so don't bother with the following code:

```{r}
#| label: necessary-settings
#| code-fold: true
#| message: false
#| warning: false
#| results: 'hide'

# Installation of packages for cookbook-rpolars
install.packages(c('dplyr','data.table','arrow'), repos = c('https://tidyverse.r-universe.dev'),dependencies = TRUE)
install.packages('fakir', repos = c('https://colinfay.r-universe.dev'),dependencies = TRUE)

# Loading fakir package
library(dplyr)
library(data.table)
library(arrow)
library(fakir)

# Creation the "Datasets" folder
dir.create(normalizePath("Datasets"))

# Creation of large example dataset
write_parquet(
  x = fake_ticket_client(vol = 1000),
  sink = normalizePath("Datasets/example_data.parquet"))

# Creation of iris_dt
iris_dt <- as.data.table(iris)
```

```{r}
#| label: load-packages

```

Until the R polars package is uploaded to CRAN, [the polars package development team](https://github.com/pola-rs/r-polars/graphs/contributors) offers [several solutions](https://rpolars.github.io/#install) for installation.

The most practical one in my opinion at the moment is to use [R-universe](https://r-universe.dev/search/) and install like this: 

``` {r}
#| label: installation
#| message: false
#| warning: false
#| results: 'hide'
install.packages("polars", repos = "https://rpolars.r-universe.dev")
library(polars)
```

Polars' main functions are stored in the "pl" namespace and can be accessed using the "pl$" prefix to prevent conflicts with other packages and base R function names.

First example to convert the most famous R data frame ([iris](https://archive.ics.uci.edu/ml/datasets/iris)) to a Polars DataFrame:

``` {r}
#| label: iris-conversion
iris_polars <- pl$DataFrame(iris)
iris_polars
```

For example, **to count the number of lines** of the iris data frame :  

::: {.panel-tabset}
## polars

```{r}
#| label: height-function
# With pl$ prefix
pl$DataFrame(iris)$height
# Using iris_polars
iris_polars$height
```

## R base

```{r}
#| label: nrow-function
nrow(iris)
```

:::

**To select the first 5 iris rows and the Petal.Length and Species columns**, syntax is identical between Polars and R base:

::: {.panel-tabset}
## polars

```{r}
#| label: first-extract-polars
iris_polars[1:5, c("Petal.Length", "Species")]
```

## R base

```{r}
#| label: first-extract-rbase
iris[1:5, c("Petal.Length", "Species")]
```

## dplyr

```{r}
#| label: first-extract-dplyr
iris |> 
  slice(1:5) |> 
  select(Petal.Length,Species)
```

## data.table

```{r}
#| label: first-extract-datatable
iris_dt[1:5, .(Petal.Length, Species)]
```

:::

If you have read this far and managed to reproduce the examples, congratulations! You are ready to dive into the deep end of Polars with R in the next parts of this cookbook!